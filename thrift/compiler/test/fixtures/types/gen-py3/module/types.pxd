#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libcpp.string cimport string
from libcpp cimport bool as cbool
from cpython cimport bool as pbool
from libc.stdint cimport int8_t, int16_t, int32_t, int64_t
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from thrift.py3.exceptions cimport cTException, Error as __Error
cimport thrift.py3.types

cdef extern from * nogil:
    cdef cppclass std_list "std::list"[T]:
        ctypedef T value_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)

        std_list() except +
        std_list(std_list&) except +

        void push_back(T&) except +
        size_type size()
        iterator begin()
        iterator end()
        reverse_iterator rbegin()
        reverse_iterator rend()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass std_deque "std::deque"[T]:
        ctypedef T value_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)

        std_deque() except +
        std_deque(std_deque&) except +

        void push_back(T&) except +
        size_type size()
        iterator begin()
        iterator end()
        reverse_iterator rbegin()
        reverse_iterator rend()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_fbvector "folly::fbvector"[T]:
        ctypedef T value_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)

        folly_fbvector() except +
        folly_fbvector(folly_fbvector&) except +

        void push_back(T&) except +
        size_type size()
        iterator begin()
        iterator end()
        reverse_iterator rbegin()
        reverse_iterator rend()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_small_vector "folly::small_vector"[T]:
        ctypedef T value_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)

        folly_small_vector() except +
        folly_small_vector(folly_small_vector&) except +

        void push_back(T&) except +
        size_type size()
        iterator begin()
        iterator end()
        reverse_iterator rbegin()
        reverse_iterator rend()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_sorted_vector_set "folly::sorted_vector_set"[T]:
        ctypedef T value_type

        cppclass iterator:
            T& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            T& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)

        folly_sorted_vector_set() except +
        folly_sorted_vector_set(folly_sorted_vector_set&) except +

        iterator insert(iterator, const T&) except +
        size_type size()
        iterator begin()
        iterator end()
        reverse_iterator rbegin()
        reverse_iterator rend()
        void clear()
        bint empty()

cdef extern from * nogil:
    cdef cppclass folly_sorted_vector_map "folly::sorted_vector_map"[T, U]:
        ctypedef T key_type
        ctypedef U mapped_type

        cppclass iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(iterator)
            bint operator!=(iterator)
        cppclass reverse_iterator:
            cpair[T, U]& operator*()
            iterator operator++()
            bint operator==(reverse_iterator)
            bint operator!=(reverse_iterator)

        folly_sorted_vector_map() except +
        folly_sorted_vector_map(folly_sorted_vector_map&) except +

        cpair[iterator, bint] insert(cpair[T, U]) except +
        iterator find(const T&)
        size_t count(const T&)
        size_t size()
        iterator begin()
        iterator end()
        reverse_iterator rbegin()
        reverse_iterator rend()
        void clear()
        bint empty()


cdef extern from "src/gen-cpp2/module_types.h" namespace "apache::thrift::fixtures::types":
    cdef cppclass chas_bitwise_ops "apache::thrift::fixtures::types::has_bitwise_ops":
        bint operator==(chas_bitwise_ops&)
    chas_bitwise_ops has_bitwise_ops__none "apache::thrift::fixtures::types::has_bitwise_ops::none"
    chas_bitwise_ops has_bitwise_ops__zero "apache::thrift::fixtures::types::has_bitwise_ops::zero"
    chas_bitwise_ops has_bitwise_ops__one "apache::thrift::fixtures::types::has_bitwise_ops::one"
    chas_bitwise_ops has_bitwise_ops__two "apache::thrift::fixtures::types::has_bitwise_ops::two"
    chas_bitwise_ops has_bitwise_ops__three "apache::thrift::fixtures::types::has_bitwise_ops::three"

cdef chas_bitwise_ops has_bitwise_ops_to_cpp(value)

cdef extern from "src/gen-cpp2/module_types_custom_protocol.h" namespace "apache::thrift::fixtures::types":
    # Forward Declaration
    cdef cppclass cdecorated_struct "apache::thrift::fixtures::types::decorated_struct"
    # Forward Declaration
    cdef cppclass cContainerStruct "apache::thrift::fixtures::types::ContainerStruct"

cdef extern from "src/gen-cpp2/module_types.h" namespace "apache::thrift::fixtures::types":
    cdef cppclass cdecorated_struct__isset "apache::thrift::fixtures::types::decorated_struct::__isset":
        bint field

    cdef cppclass cdecorated_struct "apache::thrift::fixtures::types::decorated_struct":
        cdecorated_struct() except +
        cdecorated_struct(const cdecorated_struct&) except +
        bint operator==(cdecorated_struct&)
        string field
        cdecorated_struct__isset __isset

    cdef cppclass cContainerStruct__isset "apache::thrift::fixtures::types::ContainerStruct::__isset":
        bint fieldA
        bint fieldB
        bint fieldC
        bint fieldD
        bint fieldE
        bint fieldF
        bint fieldG

    cdef cppclass cContainerStruct "apache::thrift::fixtures::types::ContainerStruct":
        cContainerStruct() except +
        cContainerStruct(const cContainerStruct&) except +
        bint operator==(cContainerStruct&)
        vector[int32_t] fieldA
        std_list[int32_t] fieldB
        std_deque[int32_t] fieldC
        folly_fbvector[int32_t] fieldD
        folly_small_vector[int32_t] fieldE
        folly_sorted_vector_set[int32_t] fieldF
        folly_sorted_vector_map[int32_t,string] fieldG
        cContainerStruct__isset __isset


cdef extern from "<utility>" namespace "std" nogil:
    cdef shared_ptr[cdecorated_struct] move(unique_ptr[cdecorated_struct])
    cdef shared_ptr[cdecorated_struct] move_shared "std::move"(shared_ptr[cdecorated_struct])
    cdef unique_ptr[cdecorated_struct] move_unique "std::move"(unique_ptr[cdecorated_struct])
    cdef shared_ptr[cContainerStruct] move(unique_ptr[cContainerStruct])
    cdef shared_ptr[cContainerStruct] move_shared "std::move"(shared_ptr[cContainerStruct])
    cdef unique_ptr[cContainerStruct] move_unique "std::move"(unique_ptr[cContainerStruct])

cdef extern from "<memory>" namespace "std" nogil:
    cdef shared_ptr[const cdecorated_struct] const_pointer_cast "std::const_pointer_cast<const apache::thrift::fixtures::types::decorated_struct>"(shared_ptr[cdecorated_struct])
    cdef shared_ptr[const cContainerStruct] const_pointer_cast "std::const_pointer_cast<const apache::thrift::fixtures::types::ContainerStruct>"(shared_ptr[cContainerStruct])

# Forward Definition of the cython struct
cdef class decorated_struct(thrift.py3.types.Struct)

cdef class decorated_struct(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cdecorated_struct] _cpp_obj

    @staticmethod
    cdef unique_ptr[cdecorated_struct] _make_instance(
        cdecorated_struct* base_instance,
        object field
    ) except *

    @staticmethod
    cdef create(shared_ptr[cdecorated_struct])

# Forward Definition of the cython struct
cdef class ContainerStruct(thrift.py3.types.Struct)

cdef class ContainerStruct(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cContainerStruct] _cpp_obj
    cdef List__i32 __fieldA
    cdef std_list__List__i32 __fieldB
    cdef std_deque__List__i32 __fieldC
    cdef folly_fbvector__List__i32 __fieldD
    cdef folly_small_vector__List__i32 __fieldE
    cdef folly_sorted_vector_set__Set__i32 __fieldF
    cdef folly_sorted_vector_map__Map__i32_string __fieldG

    @staticmethod
    cdef unique_ptr[cContainerStruct] _make_instance(
        cContainerStruct* base_instance,
        object fieldA,
        object fieldB,
        object fieldC,
        object fieldD,
        object fieldE,
        object fieldF,
        object fieldG
    ) except *

    @staticmethod
    cdef create(shared_ptr[cContainerStruct])


cdef class List__i32:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[vector[int32_t]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[vector[int32_t]])
    @staticmethod
    cdef unique_ptr[vector[int32_t]] _make_instance(object items) except *

cdef class std_list__List__i32:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[std_list[int32_t]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[std_list[int32_t]])
    @staticmethod
    cdef unique_ptr[std_list[int32_t]] _make_instance(object items) except *

cdef class std_deque__List__i32:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[std_deque[int32_t]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[std_deque[int32_t]])
    @staticmethod
    cdef unique_ptr[std_deque[int32_t]] _make_instance(object items) except *

cdef class folly_fbvector__List__i32:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[folly_fbvector[int32_t]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[folly_fbvector[int32_t]])
    @staticmethod
    cdef unique_ptr[folly_fbvector[int32_t]] _make_instance(object items) except *

cdef class folly_small_vector__List__i32:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[folly_small_vector[int32_t]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[folly_small_vector[int32_t]])
    @staticmethod
    cdef unique_ptr[folly_small_vector[int32_t]] _make_instance(object items) except *

cdef class folly_sorted_vector_set__Set__i32:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[folly_sorted_vector_set[int32_t]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[folly_sorted_vector_set[int32_t]])
    @staticmethod
    cdef unique_ptr[folly_sorted_vector_set[int32_t]] _make_instance(object items) except *

cdef class folly_sorted_vector_map__Map__i32_string:
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[folly_sorted_vector_map[int32_t,string]] _cpp_obj
    @staticmethod
    cdef create(shared_ptr[folly_sorted_vector_map[int32_t,string]])
    @staticmethod
    cdef unique_ptr[folly_sorted_vector_map[int32_t,string]] _make_instance(object items) except *

cdef extern from "<utility>" namespace "std" nogil:
    cdef shared_ptr[vector[int32_t]] move(unique_ptr[vector[int32_t]])
    cdef unique_ptr[vector[int32_t]] move_unique "std::move"(unique_ptr[vector[int32_t]])
    cdef shared_ptr[std_list[int32_t]] move(unique_ptr[std_list[int32_t]])
    cdef unique_ptr[std_list[int32_t]] move_unique "std::move"(unique_ptr[std_list[int32_t]])
    cdef shared_ptr[std_deque[int32_t]] move(unique_ptr[std_deque[int32_t]])
    cdef unique_ptr[std_deque[int32_t]] move_unique "std::move"(unique_ptr[std_deque[int32_t]])
    cdef shared_ptr[folly_fbvector[int32_t]] move(unique_ptr[folly_fbvector[int32_t]])
    cdef unique_ptr[folly_fbvector[int32_t]] move_unique "std::move"(unique_ptr[folly_fbvector[int32_t]])
    cdef shared_ptr[folly_small_vector[int32_t]] move(unique_ptr[folly_small_vector[int32_t]])
    cdef unique_ptr[folly_small_vector[int32_t]] move_unique "std::move"(unique_ptr[folly_small_vector[int32_t]])
    cdef shared_ptr[folly_sorted_vector_set[int32_t]] move(unique_ptr[folly_sorted_vector_set[int32_t]])
    cdef unique_ptr[folly_sorted_vector_set[int32_t]] move_unique "std::move"(unique_ptr[folly_sorted_vector_set[int32_t]])
    cdef shared_ptr[folly_sorted_vector_map[int32_t,string]] move(unique_ptr[folly_sorted_vector_map[int32_t,string]])
    cdef unique_ptr[folly_sorted_vector_map[int32_t,string]] move_unique "std::move"(unique_ptr[folly_sorted_vector_map[int32_t,string]])
cdef extern from "<memory>" namespace "std" nogil:
    cdef shared_ptr[const vector[int32_t]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[vector[int32_t]])

    cdef shared_ptr[const std_list[int32_t]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[std_list[int32_t]])

    cdef shared_ptr[const std_deque[int32_t]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[std_deque[int32_t]])

    cdef shared_ptr[const folly_fbvector[int32_t]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[folly_fbvector[int32_t]])

    cdef shared_ptr[const folly_small_vector[int32_t]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[folly_small_vector[int32_t]])

    cdef shared_ptr[const folly_sorted_vector_set[int32_t]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[folly_sorted_vector_set[int32_t]])

    cdef shared_ptr[const folly_sorted_vector_map[int32_t,string]] const_pointer_cast "std::const_pointer_cast"(shared_ptr[folly_sorted_vector_map[int32_t,string]])

